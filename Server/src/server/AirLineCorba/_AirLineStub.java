package AirLineCorba;


/**
* AirLineCorba/_AirLineStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Airline.idl
* Thursday, December 22, 2022 12:35:23 PM CET
*/

public class _AirLineStub extends org.omg.CORBA.portable.ObjectImpl implements AirLineCorba.AirLine
{

  public AirLineCorba.Connect Login (String email, String password)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Login", true);
                $out.write_string (email);
                $out.write_string (password);
                $in = _invoke ($out);
                AirLineCorba.Connect $result = AirLineCorba.ConnectHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Login (email, password        );
            } finally {
                _releaseReply ($in);
            }
  } // Login

  public AirLineCorba.Connect Signup (String firstName, String lastName, String email, String password, String address, int phoneNumber)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Signup", true);
                $out.write_string (firstName);
                $out.write_string (lastName);
                $out.write_string (email);
                $out.write_string (password);
                $out.write_string (address);
                $out.write_long (phoneNumber);
                $in = _invoke ($out);
                AirLineCorba.Connect $result = AirLineCorba.ConnectHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Signup (firstName, lastName, email, password, address, phoneNumber        );
            } finally {
                _releaseReply ($in);
            }
  } // Signup

  public boolean addVol (String airport, String destination, String takeDate, double totalTicktite, double price)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addVol", true);
                $out.write_string (airport);
                $out.write_string (destination);
                $out.write_string (takeDate);
                $out.write_double (totalTicktite);
                $out.write_double (price);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addVol (airport, destination, takeDate, totalTicktite, price        );
            } finally {
                _releaseReply ($in);
            }
  } // addVol

  public boolean removeVol (int volId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeVol", true);
                $out.write_long (volId);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return removeVol (volId        );
            } finally {
                _releaseReply ($in);
            }
  } // removeVol

  public boolean updateVol ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateVol", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return updateVol (        );
            } finally {
                _releaseReply ($in);
            }
  } // updateVol

  public AirLineCorba.Vol getVol (int volId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getVol", true);
                $out.write_long (volId);
                $in = _invoke ($out);
                AirLineCorba.Vol $result = AirLineCorba.VolHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getVol (volId        );
            } finally {
                _releaseReply ($in);
            }
  } // getVol

  public AirLineCorba.Vol[] getVols ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getVols", true);
                $in = _invoke ($out);
                AirLineCorba.Vol $result[] = AirLineCorba.toolvolHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getVols (        );
            } finally {
                _releaseReply ($in);
            }
  } // getVols

  public AirLineCorba.Vol getVolByDestination (String destination)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getVolByDestination", true);
                $out.write_string (destination);
                $in = _invoke ($out);
                AirLineCorba.Vol $result = AirLineCorba.VolHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getVolByDestination (destination        );
            } finally {
                _releaseReply ($in);
            }
  } // getVolByDestination

  public AirLineCorba.Client getClient (String email)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getClient", true);
                $out.write_string (email);
                $in = _invoke ($out);
                AirLineCorba.Client $result = AirLineCorba.ClientHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getClient (email        );
            } finally {
                _releaseReply ($in);
            }
  } // getClient

  public AirLineCorba.Client[] getClients ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getClients", true);
                $in = _invoke ($out);
                AirLineCorba.Client $result[] = AirLineCorba.toolclientHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getClients (        );
            } finally {
                _releaseReply ($in);
            }
  } // getClients

  public boolean Transaction (String email, int ccp, double price)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Transaction", true);
                $out.write_string (email);
                $out.write_long (ccp);
                $out.write_double (price);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Transaction (email, ccp, price        );
            } finally {
                _releaseReply ($in);
            }
  } // Transaction

  public boolean addBooking (int clientId, int volId, int ccp, String email)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addBooking", true);
                $out.write_long (clientId);
                $out.write_long (volId);
                $out.write_long (ccp);
                $out.write_string (email);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addBooking (clientId, volId, ccp, email        );
            } finally {
                _releaseReply ($in);
            }
  } // addBooking

  public AirLineCorba.Booking[] listBookings (int clientId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listBookings", true);
                $out.write_long (clientId);
                $in = _invoke ($out);
                AirLineCorba.Booking $result[] = AirLineCorba.toolbookingHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listBookings (clientId        );
            } finally {
                _releaseReply ($in);
            }
  } // listBookings

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:AirLineCorba/AirLine:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _AirLineStub
