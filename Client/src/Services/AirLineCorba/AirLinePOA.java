package AirLineCorba;


/**
* AirLineCorba/AirLinePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Airline.idl
* Thursday, December 22, 2022 12:33:39 PM CET
*/

public abstract class AirLinePOA extends org.omg.PortableServer.Servant
 implements AirLineCorba.AirLineOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("Login", new java.lang.Integer (0));
    _methods.put ("Signup", new java.lang.Integer (1));
    _methods.put ("addVol", new java.lang.Integer (2));
    _methods.put ("removeVol", new java.lang.Integer (3));
    _methods.put ("updateVol", new java.lang.Integer (4));
    _methods.put ("getVol", new java.lang.Integer (5));
    _methods.put ("getVols", new java.lang.Integer (6));
    _methods.put ("getVolByDestination", new java.lang.Integer (7));
    _methods.put ("getClient", new java.lang.Integer (8));
    _methods.put ("getClients", new java.lang.Integer (9));
    _methods.put ("Transaction", new java.lang.Integer (10));
    _methods.put ("addBooking", new java.lang.Integer (11));
    _methods.put ("listBookings", new java.lang.Integer (12));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // AirLineCorba/AirLine/Login
       {
         String email = in.read_string ();
         String password = in.read_string ();
         AirLineCorba.Connect $result = null;
         $result = this.Login (email, password);
         out = $rh.createReply();
         AirLineCorba.ConnectHelper.write (out, $result);
         break;
       }

       case 1:  // AirLineCorba/AirLine/Signup
       {
         String firstName = in.read_string ();
         String lastName = in.read_string ();
         String email = in.read_string ();
         String password = in.read_string ();
         String address = in.read_string ();
         int phoneNumber = in.read_long ();
         AirLineCorba.Connect $result = null;
         $result = this.Signup (firstName, lastName, email, password, address, phoneNumber);
         out = $rh.createReply();
         AirLineCorba.ConnectHelper.write (out, $result);
         break;
       }

       case 2:  // AirLineCorba/AirLine/addVol
       {
         String airport = in.read_string ();
         String destination = in.read_string ();
         String takeDate = in.read_string ();
         double totalTicktite = in.read_double ();
         double price = in.read_double ();
         boolean $result = false;
         $result = this.addVol (airport, destination, takeDate, totalTicktite, price);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // AirLineCorba/AirLine/removeVol
       {
         int volId = in.read_long ();
         boolean $result = false;
         $result = this.removeVol (volId);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 4:  // AirLineCorba/AirLine/updateVol
       {
         boolean $result = false;
         $result = this.updateVol ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 5:  // AirLineCorba/AirLine/getVol
       {
         int volId = in.read_long ();
         AirLineCorba.Vol $result = null;
         $result = this.getVol (volId);
         out = $rh.createReply();
         AirLineCorba.VolHelper.write (out, $result);
         break;
       }

       case 6:  // AirLineCorba/AirLine/getVols
       {
         AirLineCorba.Vol $result[] = null;
         $result = this.getVols ();
         out = $rh.createReply();
         AirLineCorba.toolvolHelper.write (out, $result);
         break;
       }

       case 7:  // AirLineCorba/AirLine/getVolByDestination
       {
         String destination = in.read_string ();
         AirLineCorba.Vol $result = null;
         $result = this.getVolByDestination (destination);
         out = $rh.createReply();
         AirLineCorba.VolHelper.write (out, $result);
         break;
       }

       case 8:  // AirLineCorba/AirLine/getClient
       {
         String email = in.read_string ();
         AirLineCorba.Client $result = null;
         $result = this.getClient (email);
         out = $rh.createReply();
         AirLineCorba.ClientHelper.write (out, $result);
         break;
       }

       case 9:  // AirLineCorba/AirLine/getClients
       {
         AirLineCorba.Client $result[] = null;
         $result = this.getClients ();
         out = $rh.createReply();
         AirLineCorba.toolclientHelper.write (out, $result);
         break;
       }

       case 10:  // AirLineCorba/AirLine/Transaction
       {
         String email = in.read_string ();
         int ccp = in.read_long ();
         double price = in.read_double ();
         boolean $result = false;
         $result = this.Transaction (email, ccp, price);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 11:  // AirLineCorba/AirLine/addBooking
       {
         int clientId = in.read_long ();
         int volId = in.read_long ();
         int ccp = in.read_long ();
         String email = in.read_string ();
         boolean $result = false;
         $result = this.addBooking (clientId, volId, ccp, email);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 12:  // AirLineCorba/AirLine/listBookings
       {
         int clientId = in.read_long ();
         AirLineCorba.Booking $result[] = null;
         $result = this.listBookings (clientId);
         out = $rh.createReply();
         AirLineCorba.toolbookingHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:AirLineCorba/AirLine:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public AirLine _this() 
  {
    return AirLineHelper.narrow(
    super._this_object());
  }

  public AirLine _this(org.omg.CORBA.ORB orb) 
  {
    return AirLineHelper.narrow(
    super._this_object(orb));
  }


} // class AirLinePOA
